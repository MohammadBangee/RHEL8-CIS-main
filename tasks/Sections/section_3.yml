---

# The CIS Control wants IPv6 disabled if not in use.
# We are using the rhel8cis_ipv6_required to specify if you have IPv6 in use
- name: "3.1.1 | PATCH | Verify if IPv6 is enabled on the system"
  sysctl:
      name: "{{ item }}"
      value: '1'
      state: present
      reload: true
  with_items:
      - net.ipv6.conf.all.disable_ipv6
      - net.ipv6.conf.default.disable_ipv6
      - net.ipv6.conf.lo.disable_ipv6
  when:
      - not rhel8cis_ipv6_required
      - rhel8cis_rule_3_1_1
  tags:
      - level1-server
      - level1-workstation
      - manual
      - patch
      - ipv6
      - networking
      - rule_3.1.1

- name: "3.1.2 | PATCH | Ensure SCTP is disabled"
  block:
      - name: "3.1.2 | PATCH | Ensure SCTP is disabled | CIS"
        lineinfile:
            path: /etc/modprobe.d/CIS.conf
            regexp: "^(#)?install sctp(\\s|$)"
            line: "install sctp /bin/true"
            create: true
            mode: 0600

      - name: "3.1.2 | PATCH | Ensure SCTP is disabled | blacklist"
        lineinfile:
            path: /etc/modprobe.d/blacklist.conf
            regexp: "^(#)?blacklist sctp(\\s|$)"
            line: "blacklist sctp"
            create: true
            mode: 0600
  when:
      - rhel8cis_rule_3_1_2
  tags:
      - level2-server
      - level2-workstation
      - automated
      - patch
      - sctp
      - rule_3.1.2

- name: "3.1.3 | PATCH | Ensure DCCP is disabled"
  block:
      - name: "3.1.3 | PATCH | Ensure DCCP is disabled | CIS"
        lineinfile:
            path: /etc/modprobe.d/CIS.conf
            regexp: "^(#)?install dccp(\\s|$)"
            line: "install dccp /bin/true"
            create: true
            mode: 0600

      - name: "3.1.3 | PATCH | Ensure DCCP is disabled | blacklist"
        lineinfile:
            path: /etc/modprobe.d/CIS.conf
            regexp: "^(#)?blacklist dccp(\\s|$)"
            line: "blacklist dccp"
            create: true
            mode: 0600
  when:
      - rhel8cis_rule_3_1_3
  tags:
      - level2-server
      - level2-workstation
      - automated
      - dccp
      - patch
      - rule_3.1.3

- name: "3.1.4 | PATCH | Ensure wireless interfaces are disabled"
  block:
      - name: "3.1.4 | AUDIT | Ensure wireless interfaces are disabled | Check if nmcli command is available"
        command: rpm -q NetworkManager
        changed_when: false
        failed_when: false
        check_mode: false
        register: rhel_08_nmcli_available

      - name: "3.1.4 | AUDIT | Ensure wireless interfaces are disabled | Check if wifi is enabled"
        command: nmcli radio wifi
        register: rhel_08_wifi_enabled
        changed_when: rhel_08_wifi_enabled.stdout != "disabled"
        failed_when: false
        when: rhel_08_nmcli_available.rc == 0

      - name: "3.1.4 | PATCH | Ensure wireless interfaces are disabled | Disable wifi if enabled"
        command: nmcli radio all off
        changed_when: false
        failed_when: false
        when: rhel_08_wifi_enabled is changed
  when:
      - rhel8cis_rule_3_1_4
  tags:
      - level1-server
      - automated
      - patch
      - wireless
      - rule_3.1.4

---

- name: "3.2.1 | PATCH | Ensure IP forwarding is disabled"
  block:
      - name: "3.2.1 | PATCH | Ensure IP forwarding is disabled | Disable IPv4 forwarding"
        sysctl:
            name: net.ipv4.ip_forward
            value: '0'
            state: present
            reload: true
            ignoreerrors: true
        notify: sysctl flush ipv4 route table

      - name: "3.2.1 | PATCH | Ensure IP forwarding is disabled | Disable IPv6 forwarding"
        sysctl:
            name: net.ipv6.conf.all.forwarding
            value: '0'
            state: present
            reload: true
            ignoreerrors: true
        notify: sysctl flush ipv6 route table
        when: rhel8cis_ipv6_required
  when:
      - not rhel8cis_is_router
      - rhel8cis_rule_3_2_1
  tags:
      - level1-server
      - level1-workstation
      - automated
      - sysctl
      - patch
      - rule_3.2.1

- name: "3.2.2 | PATCH | Ensure packet redirect sending is disabled"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: true
      state: present
      reload: true
      ignoreerrors: true
  notify: sysctl flush ipv4 route table
  with_items:
      - { name: net.ipv4.conf.all.send_redirects, value: 0 }
      - { name: net.ipv4.conf.default.send_redirects, value: 0 }
  when:
      - not rhel8cis_is_router
      - rhel8cis_rule_3_2_2
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - sysctl
      - rule_3.2.2

---

- name: "3.3.1 | PATCH | Ensure source routed packets are not accepted"
  block:
      - name: "3.3.1 | PATCH | Ensure source routed packets are not accepted | Set routed packets IPv4"
        sysctl:
            name: '{{ item.name }}'
            value: '{{ item.value }}'
            sysctl_set: true
            state: present
            reload: true
            ignoreerrors: true
        notify: sysctl flush ipv4 route table
        with_items:
            - { name: net.ipv4.conf.all.accept_source_route, value: 0 }
            - { name: net.ipv4.conf.default.accept_source_route, value: 0 }

      - name: "3.3.1 | PATCH | Ensure source routed packets are not accepted | Set routed packets IPv6"
        sysctl:
            name: '{{ item.name }}'
            value: '{{ item.value }}'
            sysctl_set: true
            reload: true
            ignoreerrors: true
        notify: sysctl flush ipv6 route table
        with_items:
            - { name: net.ipv6.conf.all.accept_source_route, value: 0}
            - { name: net.ipv6.conf.default.accept_source_route, value: 0 }
        when: rhel8cis_ipv6_required
  when:
      - rhel8cis_rule_3_3_1
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - sysctl
      - rule_3.3.1

- name: "3.3.2 | PATCH | Ensure ICMP redirects are not accepted"
  block:
      - name: "3.3.2 | PATCH | Ensure ICMP redirects are not accepted | Set ICMP redirects IPv4"
        sysctl:
            name: '{{ item.name }}'
            value: '{{ item.value }}'
            sysctl_set: true
            state: present
            reload: true
            ignoreerrors: true
        notify: sysctl flush ipv4 route table
        with_items:
            - { name: net.ipv4.conf.all.accept_redirects, value: 0 }
            - { name: net.ipv4.conf.default.accept_redirects, value: 0 }

      - name: "3.3.2 | PATCH | Ensure ICMP redirects are not accepted | Set ICMP redirects IPv6"
        sysctl:
            name: '{{ item.name }}'
            value: '{{ item.value }}'
            sysctl_set: true
            state: present
            reload: true
            ignoreerrors: true
        notify: sysctl flush ipv6 route table
        with_items:
            - { name: net.ipv6.conf.all.accept_redirects, value: 0 }
            - { name: net.ipv6.conf.default.accept_redirects, value: 0 }
        when: rhel8cis_ipv6_required
  when:
      - rhel8cis_rule_3_3_2
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - sysctl
      - rule_3.3.2

- name: "3.3.3 | PATCH | Ensure secure ICMP redirects are not accepted"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: true
      state: present
      reload: true
      ignoreerrors: true
  notify: sysctl flush ipv4 route table
  with_items:
      - { name: net.ipv4.conf.all.secure_redirects, value: 0 }
      - { name: net.ipv4.conf.default.secure_redirects, value: 0 }
  when:
      - rhel8cis_rule_3_3_3
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - sysctl
      - rule_3.3.3

- name: "3.3.4 | PATCH | Ensure suspicious packets are logged"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: true
      state: present
      reload: true
      ignoreerrors: true
  notify: sysctl flush ipv4 route table
  with_items:
      - { name: net.ipv4.conf.all.log_martians, value: 1 }
      - { name: net.ipv4.conf.default.log_martians, value: 1 }
  when:
      - rhel8cis_rule_3_3_4
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - sysctl
      - rule_3.3.4

- name: "3.3.5 | PATCH | Ensure broadcast ICMP requests are ignored"
  sysctl:
      name: net.ipv4.icmp_echo_ignore_broadcasts
      value: '1'
      state: present
      reload: true
      ignoreerrors: true
  notify: sysctl flush ipv4 route table
  when:
      - rhel8cis_rule_3_3_5
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - sysctl
      - rule_3.3.5

- name: "3.3.6 | PATCH | Ensure bogus ICMP responses are ignored"
  sysctl:
      name: net.ipv4.icmp_ignore_bogus_error_responses
      value: '1'
      state: present
      reload: true
      ignoreerrors: true
  notify: sysctl flush ipv4 route table
  when:
      - rhel8cis_rule_3_3_6
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - sysctl
      - rule_3.3.6

- name: "3.3.7 | PATCH | Ensure Reverse Path Filtering is enabled"
  sysctl:
      name: "{{ item }}"
      value: '1'
      sysctl_set: true
      state: present
      reload: true
      ignoreerrors: true
  loop:
      - net.ipv4.conf.all.rp_filter
      - net.ipv4.conf.default.rp_filter
  notify: sysctl flush ipv4 route table
  when:
      - rhel8cis_rule_3_3_7
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - sysctl
      - rule_3.3.7

- name: "3.3.8 | PATCH | Ensure TCP SYN Cookies is enabled"
  sysctl:
      name: net.ipv4.tcp_syncookies
      value: '1'
      state: present
      reload: true
      ignoreerrors: true
  notify: sysctl flush ipv4 route table
  when:
      - rhel8cis_rule_3_3_8
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - sysctl
      - rule_3.3.8

- name: "3.3.9 | PATCH | Ensure IPv6 router advertisements are not accepted"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: true
      state: present
      reload: true
      ignoreerrors: true
  notify: sysctl flush ipv6 route table
  with_items:
      - { name: net.ipv6.conf.all.accept_ra, value: 0 }
      - { name: net.ipv6.conf.default.accept_ra, value: 0 }
  when:
      - rhel8cis_ipv6_required
      - rhel8cis_rule_3_3_9
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - sysctl
      - rule_3.3.9

---

- name: "3.4.1.1 | PATCH | Ensure firewalld is installed"
  package:
      name:
          - firewalld
          - iptables
      state: present
  when:
      - rhel8cis_rule_3_4_1_1
      - rhel8cis_firewall == "firewalld"
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - firewalld
      - rule_3.4.1.1

- name: "3.4.1.2 | PATCH | Ensure iptables-services not installed with firewalld"
  block:
      - name: "3.4.1.2 | PATCH | Ensure iptables-services not installed with firewalld | Stop running services"
        systemd:
            name: "{{ item }}"
            masked: true
        with_items:
            - iptables
            - ip6tables
        when: item in ansible_facts.packages

      - name: "3.4.1.2 | PATCH | Ensure iptables-services not installed with firewalld | Remove IPTables"
        package:
            name: iptables-services
            state: absent
  when:
      - rhel8cis_rule_3_4_1_2
      - rhel8cis_firewall == "firewalld"
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - firewalld
      - rule_3.4.1.2

- name: "3.4.1.3 | PATCH | Ensure nftables either not installed or masked with firewalld"
  systemd:
      name: nftables
      state: stopped
      masked: true
  when:
      - rhel8cis_firewall == "firewalld"
      - rhel8cis_rule_3_4_1_3
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - firewalld
      - rule_3_4_1_3

- name: "3.4.1.4 | PATCH | Ensure firewalld service is enabled and running"
  systemd:
      name: firewalld
      state: started
      enabled: true
  when:
      - rhel8cis_firewall == "firewalld"
      - rhel8cis_rule_3_4_1_4
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - firewalld
      - rule_3_4_1_4

- name: "3.4.1.5 | PATCH | Ensure firewalld default zone is set"
  block:
      - name: "3.4.1.5 | AUDIT | Ensure firewalld default zone is set"
        shell: "firewall-cmd --get-default-zone | grep {{ rhel8cis_default_zone }}"
        changed_when: false
        failed_when: ( firewalld_zone_set.rc not in [ 0, 1 ] )
        register: firewalld_zone_set

      - name: "3.4.1.5 | AUDIT | Ensure firewalld default zone is set"
        command: firewall-cmd --set-default-zone="{{ rhel8cis_default_zone }}"
        when:
            - firewalld_zone_set.rc != 0
  when:
      - rhel8cis_firewall == "firewalld"
      - rhel8cis_rule_3_4_1_5
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - firewalld
      - rule_3.4.1.5

- name: "3.4.1.6 | AUDIT | Ensure network interfaces are assigned to appropriate zone"
  block:
      - name: "3.4.1.6 | AUDIT | Ensure network interfaces are assigned to appropriate zone | Get list of interfaces and policies"
        shell: "nmcli -t connection show | awk -F: '{ if($4){print $4} }' | while read INT; do firewall-cmd --get-active-zones | grep -B1 $INT; done"
        changed_when: false
        failed_when: false
        check_mode: false
        register: rhel8cis_3_4_1_6_interfacepolicy

      - name: "3.4.1.6 | AUDIT | Ensure network interfaces are assigned to appropriate zone | Get list of interfaces and policies | Show the interface to policy"
        debug:
            msg:
                - "Warning!! The items below are the policies tied to the interfaces, please correct as needed"
                - "{{ rhel8cis_3_4_1_6_interfacepolicy.stdout_lines }}"

      - name: "3.4.1.6 | AUDIT | Ensure network interfaces are assigned to appropriate zone | Warn Count"
        ansible.builtin.import_tasks: warning_facts.yml
  vars:
      warn_control_id: '3.4.1.6'
  when:
      - rhel8cis_firewall == "firewalld"
      - rhel8cis_rule_3_4_1_6
  tags:
      - level1-server
      - level1-workstation
      - manual
      - audit
      - rule_3.4.1.6

- name: "3.4.1.7 | AUDIT | Ensure firewalld drops unnecessary services and ports"
  block:
      - name: "3.4.1.7 | AUDIT | Ensure firewalld drops unnecessary services and ports | Get list of services and ports"
        shell: "firewall-cmd --get-active-zones | awk '!/:/ {print $1}' | while read ZN; do firewall-cmd --list-all --zone=$ZN; done"
        changed_when: false
        failed_when: false
        check_mode: false
        register: rhel8cis_3_4_1_7_servicesport

      - name: "3.4.1.7 | AUDIT | Ensure firewalld drops unnecessary services and ports | Show services and ports"
        debug:
            msg:
                - "The items below are the services and ports that are accepted, please correct as needed"
                - "{{ rhel8cis_3_4_1_7_servicesport.stdout_lines }}"
  when:
      - rhel8cis_firewall == "firewalld"
      - rhel8cis_rule_3_4_1_7
  tags:
      - level1-server
      - level1-workstation
      - manual
      - audit
      - rule_3.4.1.7

---

- name: "3.4.2.1 | PATCH | Ensure nftables is installed"
  package:
      name: nftables
      state: present
  when:
      - rhel8cis_firewall == "nftables"
      - rhel8cis_rule_3_4_2_1
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - nftables
      - rule_3.4.2.1

# The control allows the service it be masked or not installed
# We have chosen not installed
- name: "3.4.2.2 | PATCH | Ensure firewalld is either not installed or masked with nftables"
  package:
      name: firewalld
      state: absent
  when:
      - rhel8cis_firewall == "nftables"
      - rhel8cis_rule_3_4_2_2
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - nftables
      - rule_3.4.2.2

- name: "3.4.2.3 | PATCH | Ensure iptables-services not installed with nftables"
  block:
      - name: "3.4.2.3 | PATCH | Ensure iptables-services not installed with nftables | Stop services"
        systemd:
            name: "{{ item }}"
            enabled: false
            masked: true
        ignore_errors: true  # noqa ignore-errors
        with_items:
            - iptables
            - ip6tables

      - name: "3.4.2.3 | PATCH | Ensure iptables-services not installed with nftables | Remove IPTables"
        package:
            name: iptables-service
            state: absent
  when:
      - rhel8cis_firewall == "nftables"
      - rhel8cis_rule_3_4_2_3
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - nftables
      - rule_3.4.2.3

- name: "3.4.2.4 | PATCH | Ensure iptables are flushed with nftables"
  block:
      - name: "3.4.2.4 | PATCH | Ensure iptables are flushed with nftables | IPv4"
        command: iptables -F

      - name: "3.4.2.4 | PATCH | Ensure iptables are flushed with nftables | IPv6"
        command: ip6tables -F
        when: rhel8cis_ipv6_required
  when:
      - rhel8cis_rule_3_4_2_4
      - rhel8cis_firewall != "firewalld"
  tags:
      - level1-server
      - level1-workstation
      - manual
      - patch
      - nftables
      - rule_3.4.2.4

- name: "3.4.2.5 | AUDIT | Ensure an nftables table exists"
  block:
      - name: "3.4.2.5 | AUDIT | Ensure a table exists | Check for tables"
        command: nft list tables
        changed_when: false
        failed_when: false
        register: rhel8cis_3_4_2_5_nft_tables

      - name: "3.4.2.5 | AUDIT | Ensure an nftables table exists | Show existing tables"
        debug:
            msg:
                - "Below are the current nft tables, please review"
                - "{{ rhel8cis_3_4_2_5_nft_tables.stdout_lines }}"
        when: rhel8cis_3_4_2_5_nft_tables.stdout | length > 0

      - name: "3.4.2.5 | AUDIT | Ensure an nftables table exists | Alert on no tables"
        debug:
            msg:
                - "Warning!! You currently have no nft tables, please review your setup"
                - 'Use the command "nft create table inet <table name>" to create a new table'
        when:
            - rhel8cis_3_4_2_5_nft_tables.stdout | length == 0
            - not rhel8cis_nft_tables_autonewtable

      - name: "3.4.2.5 | AUDIT | Ensure an nftables table exists| Warn Count"
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: '3.4.2.5'
        when:
            - rhel8cis_3_4_2_5_nft_tables.stdout | length == 0
            - not rhel8cis_nft_tables_autonewtable

      - name: "3.4.2.5 | PATCH | Ensure a table exists | Create table if needed"
        command: nft create table inet "{{ rhel8cis_nft_tables_tablename }}"
        failed_when: false
        when: rhel8cis_nft_tables_autonewtable
  when:
      - rhel8cis_firewall == "nftables"
      - rhel8cis_rule_3_4_2_5
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - nftables
      - rule_3.4.2.5

- name: "3.4.2.6 | PATCH | Ensure nftables base chains exist"
  block:
      - name: "3.4.2.6 | AUDIT | Ensure nftables base chains exist | Get current chains for INPUT"
        shell: nft list ruleset | grep 'hook input'
        changed_when: false
        failed_when: false
        register: rhel8cis_3_4_2_6_input_chains

      - name: "3.4.2.6 | AUDIT | Ensure nftables base chains exist | Get current chains for FORWARD"
        shell: nft list ruleset | grep 'hook forward'
        changed_when: false
        failed_when: false
        register: rhel8cis_3_4_2_6_forward_chains

      - name: "3.4.2.6 | AUDIT | Ensure nftables base chains exist | Get current chains for OUTPUT"
        shell: nft list ruleset | grep 'hook output'
        changed_when: false
        failed_when: false
        register: rhel8cis_3_4_2_6_output_chains

      - name: "3.4.2.6 | AUDIT | Ensure nftables base chains exist | Display chains for review"
        debug:
            msg:
                - "Below are the current INPUT chains"
                - "{{ rhel8cis_3_4_2_6_input_chains.stdout_lines }}"
                - "Below are the current FORWARD chains"
                - "{{ rhel8cis_3_4_2_6_forward_chains.stdout_lines }}"
                - "Below are teh current OUTPUT chains"
                - "{{ rhel8cis_3_4_2_6_output_chains.stdout_lines }}"
        when: not rhel8cis_nft_tables_autochaincreate

      - name: "3.4.2.6 | PATCH | Ensure nftables base chains exist | Create chains if needed"
        shell: "{{ item }}"
        failed_when: false
        with_items:
            - nft create chain inet "{{ rhel8cis_nft_tables_tablename }}" input { type filter hook input priority 0 \; }
            - nft create chain inet "{{ rhel8cis_nft_tables_tablename }}" forward { type filter hook forward priority 0 \; }
            - nft create chain inet "{{ rhel8cis_nft_tables_tablename }}" output { type filter hook output priority 0 \; }
        when: rhel8cis_nft_tables_autochaincreate
  when:
      - rhel8cis_firewall == "nftables"
      - rhel8cis_rule_3_4_2_6
  tags:
      - level1-server
      - level1-workstation
      - automate
      - patch
      - nftables
      - rule_3.4.2.6

- name: "3.4.2.7 | PATCH | Ensure nftables loopback traffic is configured"
  block:
      - name: "3.4.2.7 | AUDIT | Ensure nftables loopback traffic is configured | Gather iif lo accept existence"
        shell: nft list ruleset | awk '/hook input/,/}/' | grep 'iif "lo" accept'
        changed_when: false
        failed_when: false
        register: rhel8cis_3_4_2_7_iiflo

      - name: "3.4.2.7 | AUDIT | Ensure nftables loopback traffic is configured | Gather ip saddr existence"
        shell: nft list ruleset | awk '/hook input/,/}/' | grep 'ip saddr'
        changed_when: false
        failed_when: false
        register: rhel8cis_3_4_2_7_ipsaddr

      - name: "3.4.2.7 | AUDIT | Ensure nftables loopback traffic is configured | Gather ip6 saddr existence"
        shell: nft list ruleset | awk '/hook input/,/}/' | grep 'ip6 saddr'
        changed_when: false
        failed_when: false
        register: rhel8cis_3_4_2_7_ip6saddr

      - name: "3.4.2.7 | PATCH | Ensure nftables loopback traffic is configured | Set iif lo accept rule"
        command: nft add rule inet "{{ rhel8cis_nft_tables_tablename }}" input iif lo accept
        when: '"iif \"lo\" accept" not in rhel8cis_3_4_2_7_iiflo.stdout'

      - name: "3.4.2.7 | PATCH | Ensure nftables loopback traffic is configured | Set ip sddr rule"
        command: nft add rule inet "{{ rhel8cis_nft_tables_tablename }}" input ip saddr 127.0.0.0/8 counter drop
        when: '"ip saddr 127.0.0.0/8 counter packets 0 bytes 0 drop" not in rhel8cis_3_4_2_7_ipsaddr.stdout'

      - name: "3.4.2.7 | PATCH | Ensure nftables loopback traffic is configured | Set ip6 saddr rule"
        command: nft add rule inet "{{ rhel8cis_nft_tables_tablename }}" input ip6 saddr ::1 counter drop
        when: '"ip6 saddr ::1 counter packets 0 bytes 0 drop" not in rhel8cis_3_4_2_7_ip6saddr.stdout'
  when:
      - rhel8cis_firewall == "nftables"
      - rhel8cis_rule_3_4_2_7
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - nftables
      - rule_3.4.2.7

- name: "3.4.2.8 | PATCH | Ensure nftables outbound and established connections are configured"
  block:
      - name: "3.4.2.8 | AUDIT | Ensure nftables outbound and established connections are configured | Gather incoming connection rules"
        shell: nft list ruleset | awk '/hook input/,/}/' | grep -E 'ip protocol (tcp|udp|icmp) ct state'
        changed_when: false
        failed_when: false
        register: rhel8cis_3_4_2_8_inconnectionrule

      - name: "3.4.2.8| AUDIT | Ensure nftables outbound and established connections are configured | Gather outbound connection rules"
        shell: nft list ruleset | awk '/hook output/,/}/' | grep -E 'ip protocol (tcp|udp|icmp) ct state'
        changed_when: false
        failed_when: false
        register: rhel8cis_3_4_2_8_outconnectionrule

      - name: "3.4.2.8| PATCH | Ensure nftables outbound and established connections are configured | Add input tcp established accept policy"
        command: nft add rule inet "{{ rhel8cis_nft_tables_tablename }}" input ip protocol tcp ct state established accept
        when: '"ip protocol tcp ct state established accept" not in rhel8cis_3_4_2_8_inconnectionrule.stdout'

      - name: "3.4.2.8 | PATCH | Ensure nftables outbound and established connections are configured | Add input udp established accept policy"
        command: nft add rule inet "{{ rhel8cis_nft_tables_tablename }}" input ip protocol udp ct state established accept
        when: '"ip protocol udp ct state established accept" not in rhel8cis_3_4_2_8_inconnectionrule.stdout'

      - name: "3.4.2.8 | PATCH | Ensure nftables outbound and established connections are configured | Add input icmp established accept policy"
        command: nft add rule inet "{{ rhel8cis_nft_tables_tablename }}" input ip protocol icmp ct state established accept
        when: '"ip protocol icmp ct state established accept" not in rhel8cis_3_4_2_8_inconnectionrule.stdout'

      - name: "3.4.2.8 | PATCH | Ensure nftables outbound and established connections are configured | Add output tcp new, related, established accept policy"
        command: nft add rule inet "{{ rhel8cis_nft_tables_tablename }}" output ip protocol tcp ct state new,related,established accept
        when: '"ip protocol tcp ct state established,related,new accept" not in rhel8cis_3_4_2_8_outconnectionrule.stdout'

      - name: "3.4.2.8 | PATCH | Ensure nftables outbound and established connections are configured | Add output udp new, related, established accept policy"
        command: nft add rule inet "{{ rhel8cis_nft_tables_tablename }}" output ip protocol udp ct state new,related,established accept
        when: '"ip protocol udp ct state established,related,new accept" not in rhel8cis_3_4_2_8_outconnectionrule.stdout'

      - name: "3.4.2.8 | PATCH | Ensure nftables outbound and established connections are configured | Add output icmp new, related, established accept policy"
        command: nft add rule inet "{{ rhel8cis_nft_tables_tablename }}" output ip protocol icmp ct state new,related,established accept
        when: '"ip protocol icmp ct state established,related,new accept" not in rhel8cis_3_4_2_8_outconnectionrule.stdout'
  when:
      - rhel8cis_firewall == "nftables"
      - rhel8cis_rule_3_4_2_8
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - nftables
      - rule_3.4.3.8

- name: "3.4.2.9 | PATCH | Ensure nftables default deny firewall policy"
  block:
      - name: "3.4.2.9 | AUDIT | Ensure nftables default deny firewall policy | Check for hook input deny policy"
        shell: nft list table inet "{{ rhel8cis_nft_tables_tablename }}" | grep 'hook input'
        failed_when: false
        changed_when: false
        register: rhel8cis_3_4_2_9_inputpolicy

      - name: "3.4.2.9 | AUDIT | Ensure nftables default deny firewall policy | Check for hook forward deny policy"
        shell: nft list table inet "{{ rhel8cis_nft_tables_tablename }}" | grep 'hook forward'
        failed_when: false
        changed_when: false
        register: rhel8cis_3_4_2_9_forwardpolicy

      - name: "3.4.2.9 | AUDIT | Ensure nftables default deny firewall policy | Check for hook output deny policy"
        shell: nft list table inet "{{ rhel8cis_nft_tables_tablename }}" | grep 'hook output'
        failed_when: false
        changed_when: false
        register: rhel8cis_3_4_2_9_outputpolicy

      - name: "3.4.2.9 | AUDIT | Ensure nftables default deny firewall policy | Check for SSH allow"
        shell: nft list table inet "{{ rhel8cis_nft_tables_tablename }}" | grep 'ssh'
        failed_when: false
        changed_when: false
        register: rhel8cis_3_4_2_9_sshallowcheck

      - name: "3.4.2.9 | PATCH | Ensure nftables default deny firewall policy | Enable SSH traffic"
        command: nft add rule inet "{{ rhel8cis_nft_tables_tablename }}" input tcp dport ssh accept
        when: '"tcp dport ssh accept" not in rhel8cis_3_4_2_9_sshallowcheck.stdout'

      - name: "3.4.2.9 | PATCH | Ensure nftables default deny firewall policy | Set hook input deny policy"
        command: nft chain inet "{{ rhel8cis_nft_tables_tablename }}" input { policy drop \; }
        when: '"type filter hook input priority 0; policy drop;" not in rhel8cis_3_4_2_9_inputpolicy.stdout'

      - name: "3.4.2.9 | PATCH | Ensure nftables default deny firewall policy | Create hook forward deny policy"
        command: nft chain inet "{{ rhel8cis_nft_tables_tablename }}" forward { policy drop \; }
        when: '"type filter hook forward priority 0; policy drop;" not in rhel8cis_3_4_2_9_forwardpolicy.stdout'

      - name: "3.4.2.9 | PATCH | Ensure nftables default deny firewall policy | Create hook output deny policy"
        command: nft chain inet "{{ rhel8cis_nft_tables_tablename }}" output { policy drop \; }
        when: '"type filter hook output priority 0; policy drop;" not in rhel8cis_3_4_2_9_outputpolicy.stdout'
  when:
      - rhel8cis_firewall == "nftables"
      - rhel8cis_rule_3_4_2_9
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - nftables
      - rule_3.4.2.9

- name: "3.4.2.10 | PATCH | Ensure nftables service is enabled"
  service:
      name: nftables
      enabled: true
  when:
      - rhel8cis_firewall == "nftables"
      - rhel8cis_rule_3_4_2_10
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - nftables
      - rule_3.4.3.10

- name: "3.4.2.11 | PATCH | Ensure nftables rules are permanent"
  lineinfile:
      path: /etc/sysconfig/nftables.conf
      state: present
      insertafter: EOF
      line: include "/etc/nftables/inet-{{ rhel8cis_nft_tables_tablename }}"
  when:
      - rhel8cis_firewall == "nftables"
      - rhel8cis_rule_3_4_2_11
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - nftables
      - rule_3.4.2.11

---

- name: "3.4.3.1.1 | PATCH | Ensure iptables packages are installed"
  package:
      name:
          - iptables
          - iptables-services
      state: present
  when:
      - rhel8cis_firewall == "iptables"
      - rhel8cis_rule_3_4_3_1_1
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - iptables
      - rule_3.4.3.1.1

- name: "3.4.3.1.2 | PATCH | Ensure nftables is not installed with iptables"
  package:
      name: nftables
      state: absent
  when:
      - rhel8cis_firewall == "iptables"
      - rhel8cis_rule_3_4_3_1_2
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - iptables
      - rule_3.4.3.1.2

# The control allows the service it be masked or not installed
# We have chosen not installed
- name: "3.4.3.1.3 | PATCH | Ensure firewalld is either not installed or masked with iptables"
  package:
      name: firewalld
      state: absent
  when:
      - rhel8cis_firewall == "iptables"
      - rhel8cis_rule_3_4_3_1_3
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - iptables
      - rule_3.4.3.1.3

---

- name: "3.4.3.2.1 | PATCH | Ensure iptables loopback traffic is configured"
  block:
      - name: "3.4.3.2.1 | PATCH | Ensure iptables loopback traffic is configured | INPUT Loopback ACCEPT"
        iptables:
            action: append
            chain: INPUT
            in_interface: lo
            jump: ACCEPT

      - name: "3.4.3.2.1 | PATCH | Ensure iptables loopback traffic is configured | OUTPUT Loopback ACCEPT"
        iptables:
            action: append
            chain: OUTPUT
            out_interface: lo
            jump: ACCEPT

      - name: "3.4.3.2.1 | PATCH | Ensure iptables loopback traffic is configured | INPUT Loopback 127.0.0.0/8"
        iptables:
            action: append
            chain: INPUT
            source: 127.0.0.0/8
            jump: DROP
  when:
      - rhel8cis_firewall == "iptables"
      - rhel8cis_rule_3_4_3_2_1
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - iptables
      - rule_3.4.3.2.1

- name: "3.4.3.2.2 | PATCH | Ensure iptables outbound and established connections are configured"
  iptables:
      action: append
      chain: '{{ item.chain }}'
      protocol: '{{ item.protocol }}'
      match: state
      ctstate: '{{ item.ctstate }}'
      jump: ACCEPT
  with_items:
      - { chain: OUTPUT, protocol: tcp, ctstate: 'NEW,ESTABLISHED' }
      - { chain: OUTPUT, protocol: udp, ctstate: 'NEW,ESTABLISHED' }
      - { chain: OUTPUT, protocol: icmp, ctstate: 'NEW,ESTABLISHED' }
      - { chain: INPUT, protocol: tcp, ctstate: ESTABLISHED }
      - { chain: INPUT, protocol: udp, ctstate: ESTABLISHED }
      - { chain: INPUT, protocol: icmp, ctstate: ESTABLISHED }
  when:
      - rhel8cis_firewall == "iptables"
      - rhel8cis_rule_3_4_3_2_2
  tags:
      - level1-server
      - level1-workstation
      - manual
      - patch
      - iptables
      - rule_3.4.3.2.2

- name: "3.4.3.2.3 | PATCH | Ensure iptables rules exist for all open ports"
  block:
      - name: "3.4.3.2.3 | AUDIT | Ensure iptables rules exist for all open ports | Get list of TCP open ports"
        shell: netstat -ant |grep "tcp.*LISTEN" | awk '{ print $4 }'| sed 's/.*://'
        changed_when: false
        failed_when: false
        register: rhel8cis_3_4_3_2_3_otcp

      - name: "3.4.3.2.3 | AUDIT | Ensure iptables rules exist for all open ports | Get the list of udp open ports"
        shell: netstat -ant |grep "udp.*LISTEN" | awk '{ print $4 }'| sed 's/.*://'
        changed_when: false
        failed_when: false
        register: rhel8cis_3_4_3_2_3_oudp

      - name: "3.4.3.2.3 | PATCH | Ensure iptables rules exist for all open ports | Adjust open tcp ports"
        iptables:
            action: append
            chain: INPUT
            protocol: tcp
            destination_port: "{{ item }}"
            match: state
            ctstate: NEW
            jump: ACCEPT
        with_items:
            - "{{ rhel8cis_3_4_3_2_3_otcp.stdout_lines }}"
        when: rhel8cis_3_4_3_2_3_otcp.stdout is defined

      - name: "3.4.3.2.3 | PATCH | Ensure iptables rules exist for all open ports | Adjust open udp ports"
        iptables:
            action: append
            chain: INPUT
            protocol: udp
            destination_port: "{{ item }}"
            match: state
            ctstate: NEW
            jump: ACCEPT
        with_items:
            - "{{ rhel8cis_3_4_3_2_3_oudp.stdout_lines }}"
        when: rhel8cis_3_4_3_2_3_otcp.stdout is defined
  when:
      - rhel8cis_firewall == "iptables"
      - rhel8cis_rule_3_4_3_2_3
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - iptables
      - rule_3.4.3.2.3

- name: "3.4.3.2.4 | PATCH | Ensure iptables default deny firewall policy"
  block:
      - name: "3.4.3.2.4 | PATCH |  Ensure iptables default deny firewall policy | Configure ssh to be allowed"
        iptables:
            chain: INPUT
            protocol: tcp
            destination_port: "22"
            jump: ACCEPT

      - name: "3.4.3.2.4 | PATCH | Ensure iptables default deny firewall policy | Set drop items"
        iptables:
            policy: DROP
            chain: "{{ item }}"
        with_items:
            - INPUT
            - FORWARD
            - OUTPUT
  when:
      - rhel8cis_rule_3_4_3_2_4
      - rhel8cis_firewall == "iptables"
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - iptables
      - rule_3.4.3.2.4

- name: "3.4.3.2.5 | PATCH | Ensure iptables rules are saved"
  iptables_state:
      state: saved
      path: /etc/sysconfig/iptables
  when:
      - rhel8cis_rule_3_4_3_2_5
      - rhel8cis_firewall == "iptables"
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - iptables
      - rule_3.4.3.2.5

- name: "3.4.3.2.6 | PATCH | Ensure iptables service is enabled and active"
  service:
      name: iptables
      enabled: true
      state: started
  when:
      - rhel8cis_firewall == "iptables"
      - rhel8cis_rule_3_4_3_2_6
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - iptables
      - rule_3.4.3.2.6

---

- name: "3.4.3.3.1 | PATCH |  Ensure ip6tables loopback traffic is configured"
  block:
      - name: "3.4.3.3.1 | PATCH |  Ensure ip6tables loopback traffic is configured | INPUT Loopback ACCEPT"
        iptables:
            action: append
            chain: INPUT
            in_interface: lo
            jump: ACCEPT
            ip_version: ipv6

      - name: "3.4.3.3.1 | PATCH |  Ensure ip6tables loopback traffic is configured | OUTPUT Loopback ACCEPT"
        iptables:
            action: append
            chain: OUTPUT
            out_interface: lo
            jump: ACCEPT
            ip_version: ipv6

      - name: "3.4.3.3.1 | PATCH | Ensure ip6tables loopback traffic is configured | INPUT Loopback 127.0.0.0/8"
        iptables:
            action: append
            chain: INPUT
            source: ::1
            jump: DROP
            ip_version: ipv6
  when:
      - rhel8cis_firewall == "iptables"
      - rhel8cis_rule_3_4_3_3_1
      - rhel8cis_ipv6_required
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - ip6tables
      - rule_3.4.3.3.1

- name: "3.4.3.3.2 | PATCH | Ensure ip6tables outbound and established connections are configured"
  iptables:
      action: append
      chain: '{{ item.chain }}'
      protocol: '{{ item.protocol }}'
      match: state
      ctstate: '{{ item.ctstate }}'
      jump: ACCEPT
      ip_version: ipv6
  with_items:
      - { chain: OUTPUT, protocol: tcp, ctstate: 'NEW,ESTABLISHED' }
      - { chain: OUTPUT, protocol: udp, ctstate: 'NEW,ESTABLISHED' }
      - { chain: OUTPUT, protocol: icmp, ctstate: 'NEW,ESTABLISHED' }
      - { chain: INPUT, protocol: tcp, ctstate: ESTABLISHED }
      - { chain: INPUT, protocol: udp, ctstate: ESTABLISHED }
      - { chain: INPUT, protocol: icmp, ctstate: ESTABLISHED }
  when:
      - rhel8cis_firewall == "iptables"
      - rhel8cis_rule_3_4_3_3_2
      - rhel8cis_ipv6_required
  tags:
      - level1-server
      - level1-workstation
      - manual
      - patch
      - ip6tables
      - rule_3.4.3.3.2

- name: "3.4.3.3.3 | PATCH | Ensure ip6tables firewall rules exist for all open ports"
  block:
      - name: "3.4.3.3.3 | AUDIT | Ensure ip6tables firewall rules exist for all open ports | Get list of TCP6 open ports"
        shell: netstat -ant |grep "tcp6.*LISTEN" | awk '{ print $4 }'| sed 's/.*://'
        changed_when: false
        failed_when: false
        register: rhel8cis_3_4_3_3_3_otcp

      - name: "3.4.3.3.3 | PATCH |Ensure ip6tables firewall rules exist for all open ports| Adjust open tcp6 ports"
        iptables:
            action: append
            chain: INPUT
            protocol: tcp
            destination_port: "{{ item }}"
            match: state
            ctstate: NEW
            jump: ACCEPT
            ip_version: ipv6
        with_items:
            - "{{ rhel8cis_3_4_3_3_3_otcp.stdout_lines }}"
        when: rhel8cis_3_4_3_3_3_otcp.stdout is defined
  when:
      - rhel8cis_firewall == "iptables"
      - rhel8cis_rule_3_4_3_3_3
      - rhel8cis_ipv6_required
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - ip6tables
      - rule_3.4.3.3.3

- name: "3.4.3.3.4 | PATCH | Ensure ip6tables default deny firewall policy"
  block:
      - name: "3.4.3.3.4 | PATCH | Ensure ip6tables default deny firewall policy | Configure ssh to be allowed"
        iptables:
            chain: INPUT
            protocol: tcp
            destination_port: "22"
            jump: ACCEPT
            ip_version: ipv6

      - name: "3.4.3.3.4 | PATCH | Ensure ip6tables default deny firewall policy | Set drop items"
        iptables:
            policy: DROP
            chain: "{{ item }}"
            ip_version: ipv6
        with_items:
            - INPUT
            - FORWARD
            - OUTPUT
  when:
      - rhel8cis_firewall == "iptables"
      - rhel8cis_rule_3_4_3_3_4
      - rhel8cis_ipv6_required
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - ip6tables
      - rule_3.4.3.3.4

- name: "3.4.3.3.5 | PATCH | Ensure ip6tables rules are saved"
  iptables_state:
      state: saved
      path: /etc/sysconfig/ip6tables
      ip_version: ipv6
  when:
      - rhel8cis_firewall == "iptables"
      - rhel8cis_ipv6_required
      - rhel8cis_rule_3_4_3_3_5
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - ip6tables
      - rule_3.4.3.3.5

- name: "3.4.3.3.6 | PATCH | Ensure ip6tables service is enabled and active"
  service:
      name: ip6tables
      enabled: true
      state: started
  when:
      - rhel8cis_firewall == "iptables"
      - rhel8cis_rule_3_4_3_3_6
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - ip6tables
      - rule_3.4.3.3.6

