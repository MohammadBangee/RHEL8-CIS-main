---

- name: "1.1.1.1 | PATCH | Ensure mounting of cramfs filesystems is disabled"
  block:
      - name: "1.1.1.1 | PATCH | Ensure mounting of cramfs filesystems is disabled | Edit modprobe config"
        lineinfile:
            path: /etc/modprobe.d/CIS.conf
            regexp: "^(#)?install cramfs(\\s|$)"
            line: "install cramfs /bin/true"
            create: true
            mode: 0600

      - name: "1.1.1.1 | PATCH | Ensure mounting of cramfs filesystems is disabled | blacklist"
        lineinfile:
            path: /etc/modprobe.d/blacklist.conf
            regexp: "^(#)?blacklist cramfs(\\s|$)"
            line: "blacklist cramfs"
            create: true
            mode: 0600

      - name: "1.1.1.1 | PATCH | Ensure mounting of cramfs filesystems is disabled | Disable cramfs"
        modprobe:
            name: cramfs
            state: absent
        when:
            - not system_is_container
  when:
      - rhel8cis_rule_1_1_1_1
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_1.1.1.1
      - cramfs

- name: "1.1.1.2 | PATCH | Ensure mounting of squashfs filesystems is disabled"
  block:
      - name: "1.1.1.2 | PATCH | Ensure mounting of squashfs filesystems is disabled | Edit modprobe config"
        lineinfile:
            path: /etc/modprobe.d/CIS.conf
            regexp: "^(#)?install squashfs(\\s|$)"
            line: "install squashfs /bin/true"
            create: true
            mode: 0600

      - name: "1.1.1.2 | PATCH | Ensure mounting of squashfs filesystems is disabled | blacklist"
        lineinfile:
            path: /etc/modprobe.d/blacklist.conf
            regexp: "^(#)?blacklist squashfs(\\s|$)"
            line: "blacklist squashfs"
            create: true
            mode: 0600

      - name: "1.1.1.2 | PATCH | Ensure mounting of squashfs filesystems is disabled | Disable squashfs"
        modprobe:
            name: squashfs
            state: absent
        when:
            - not system_is_container
  when:
      - rhel8cis_rule_1_1_1_2
  tags:
      - level2-server
      - level2-workstation
      - automated
      - patch
      - rule_1.1.1.2
      - squashfs

- name: "1.1.1.3 | PATCH | Ensure mounting of udf filesystems is disabled"
  block:
      - name: "1.1.1.3 | PATCH | Ensure mounting of udf filesystems is disable | Edit modprobe config"
        lineinfile:
            path: /etc/modprobe.d/CIS.conf
            regexp: "^(#)?install udf(\\s|$)"
            line: "install udf /bin/true"
            create: true
            mode: 0600

      - name: "1.1.1.3 | PATCH | Ensure mounting of udf filesystems is disabled | blacklist"
        lineinfile:
            path: /etc/modprobe.d/blacklist.conf
            regexp: "^(#)?blacklist udf(\\s|$)"
            line: "blacklist udf"
            create: true
            mode: 0600

      - name: "1.1.1.3 | PATCH | Ensure mounting of udf filesystems is disable | Disable udf"
        modprobe:
            name: udf
            state: absent
        when:
            - not system_is_container
  when:
      - rhel8cis_rule_1_1_1_3
  tags:
      - level2-server
      - level2-workstation
      - automated
      - patch
      - rule_1.1.1.3
      - udf

---

- name: "1.1.2.1 | PATCH | Ensure /tmp is a separate partition"
  block:
      - name: "1.1.2.1 | PATCH | Ensure /tmp is a separate partition | Absent"
        debug:
            msg: "Warning!! {{ required_mount }} is not mounted on a separate partition"

      - name: "1.1.2.1 | PATCH | Ensure /tmp is a separate partition | Present"
        ansible.builtin.import_tasks: warning_facts.yml
  vars:
      warn_control_id: '1.1.2.1'
      required_mount: '/tmp'
  when:
      - rhel8cis_rule_1_1_2_1
      - "'/tmp' not in mount_names"
  tags:
      - level1-server
      - level1-workstation
      - automated
      - audit
      - mounts
      - rule_1.1.2.1

# via fstab
- name: |
        "1.1.2.2 | PATCH | Ensure nodev option set on /tmp partition"
        "1.1.2.3 | PATCH | Ensure noexec option set on /tmp partition"
        "1.1.2.4 | PATCH | Ensure nosuid option set on /tmp partition"
  mount:
      name: /tmp
      src: "{{ item.device }}"
      fstype: "{{ item.fstype }}"
      state: present
      opts: defaults,{% if rhel8cis_rule_1_1_2_2 %}nodev,{% endif %}{% if rhel8cis_rule_1_1_2_3 %}noexec,{% endif %}{% if rhel8cis_rule_1_1_2_4 %}nosuid{% endif %}
  notify: remount tmp
  with_items:
      - "{{ ansible_mounts }}"
  loop_control:
      label: "{{ item.device }}"
  when:
      - item.mount == "/tmp"
      - not rhel8cis_tmp_svc
      - rhel8cis_rule_1_1_2_2 or
        rhel8cis_rule_1_1_2_3 or
        rhel8cis_rule_1_1_2_4
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - mounts
      - rule_1.1.2.2
      - rule_1.1.2.3
      - rule_1.1.2.4

# via systemd
- name: |
        "1.1.2.1 | PATCH | Ensure /tmp is configured"
        "1.1.2.2 | PATCH | Ensure nodev option set on /tmp partition"
        "1.1.2.3 | PATCH | Ensure noexec option set on /tmp partition"
        "1.1.2.4 | PATCH | Ensure nosuid option set on /tmp partition"
  template:
      src: etc/systemd/system/tmp.mount.j2
      dest: /etc/systemd/system/tmp.mount
      owner: root
      group: root
      mode: 0644
  notify: systemd restart tmp.mount
  when:
      - rhel8cis_tmp_svc
      - rhel8cis_rule_1_1_2_1 or
        rhel8cis_rule_1_1_2_2 or
        rhel8cis_rule_1_1_2_3 or
        rhel8cis_rule_1_1_2_4
  tags:
      - level1-server
      - level1-workstation
      - patch
      - mounts
      - rule_1.1.2.1
      - rule_1.1.2.2
      - rule_1.1.2.3
      - rule_1.1.2.4

---

- name: "1.1.3.1 | AUDIT | Ensure separate partition exists for /var"
  block:
      - name: "1.1.3.1 | AUDIT | Ensure separate partition exists for /var | Warn if partition is absent"
        debug:
            msg: "Warning!! {{ required_mount }} doesn't exist. This is a manual task"
        register: var_mount_absent
        changed_when: var_mount_absent.skipped is undefined

      - name: "1.1.3.1 | AUDIT | Ensure separate partition exists for /var | Present"
        ansible.builtin.import_tasks: warning_facts.yml
  vars:
      warn_control_id: '1.1.3.1'
      required_mount: '/var'
  when:
      - "'/var' not in mount_names"
      - rhel8cis_rule_1_1_3_1
  tags:
      - level2-server
      - level2-workstation
      - automated
      - patch
      - mounts
      - rule_1.1.3.1

# skips if mount is absent
- name: |
          "1.1.3.2 | PATCH | Ensure nodev option set on /var partition"
          "1.1.3.3 | PATCH | Ensure noexec option set on /var partition"
          "1.1.3.4 | PATCH | Ensure nosuid option set on /var partition"
  mount:
      name: /var
      src: "{{ item.device }}"
      fstype: "{{ item.fstype }}"
      state: present
      opts: defaults,{% if rhel8cis_rule_1_1_3_3 %}noexec,{% endif %}{% if rhel8cis_rule_1_1_3_2 %}nodev,{% endif %}{% if rhel8cis_rule_1_1_3_4 %}nosuid{% endif %}
  notify: change_requires_reboot
  with_items:
      - "{{ ansible_mounts }}"
  loop_control:
      label: "{{ item.device }}"
  when:
      - "'/var' in mount_names"
      - item.mount == "/var"
      - rhel8cis_rule_1_1_3_1  # This is required so the check takes place
      - rhel8cis_rule_1_1_3_2 or
        rhel8cis_rule_1_1_3_3 or
        rhel8cis_rule_1_1_3_4
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - mounts
      - skip_ansible_lint
      - rule_1.1.3.2
      - rule_1.1.3.3
      - rule_1.1.3.4

---

# Skips if mount is absent
- name: "1.1.4.1 | AUDIT | Ensure separate partition exists for /var/tmp"
  block:
      - name: "1.1.4.1 | AUDIT | Ensure separate partition exists for /var/tmp | Warn if partition is absent"
        debug:
            msg: "Warning!! {{ required_mount }} doesn't exist. This is a manual task"
        register: var_tmp_mount_absent
        changed_when: var_tmp_mount_absent.skipped is undefined

      - name: "1.1.4.1 | AUDIT | Ensure separate partition exists for /var/tmp | Present"
        ansible.builtin.import_tasks: warning_facts.yml
  vars:
      warn_control_id: '1.1.4.1'
      required_mount: '/var/tmp'
  when:
      - rhel8cis_rule_1_1_4_1
      - "'/var/tmp' not in mount_names"
  tags:
      - level2-server
      - level2-workstation
      - automated
      - audit
      - mounts
      - rule_1.1.4.1

# skips if mount is absent
- name: |
          "1.1.4.2 | PATCH | Ensure noexec option set on /var/tmp partition"
          "1.1.4.3 | PATCH | Ensure nosuid option set on /var/tmp partition"
          "1.1.4.4 | PATCH | Ensure nodev option set on /var/tmp partition"
  mount:
      name: /var/tmp
      src: "{{ item.device }}"
      fstype: "{{ item.fstype }}"
      state: present
      opts: defaults,{% if rhel8cis_rule_1_1_4_2 %}noexec,{% endif %}{% if rhel8cis_rule_1_1_4_4 %}nodev,{% endif %}{% if rhel8cis_rule_1_1_4_3 %}nosuid{% endif %}
  notify: change_requires_reboot
  with_items:
      - "{{ ansible_mounts }}"
  loop_control:
      label: "{{ item.device }}"
  when:
      - "'/var/tmp' in mount_names"
      - item.mount == "/var/tmp"
      - rhel8cis_rule_1_1_4_1  # This is required so the check takes place
      - rhel8cis_rule_1_1_4_2 or
        rhel8cis_rule_1_1_4_3 or
        rhel8cis_rule_1_1_4_4
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - mounts
      - skip_ansible_lint
      - rule_1.1.4.2
      - rule_1.1.4.3
      - rule_1.1.4.4

---

- name: "1.1.5.1 | AUDIT | Ensure separate partition exists for /var/log"
  block:
      - name: "1.1.5.1 | AUDIT | Ensure separate partition exists for /var/log | Warn if partition is absent"
        debug:
            msg: "Warning!! {{ required_mount }} doesn't exist. This is a manual task"
        register: var_log_mount_absent
        changed_when: var_log_mount_absent.skipped is undefined

      - name: "1.1.5.1 | AUDIT | Ensure separate partition exists for /var/log | Present"
        ansible.builtin.import_tasks: warning_facts.yml

  vars:
      warn_control_id: '1.1.5.1'
      required_mount: '/var/log'
  when:
      - rhel8cis_rule_1_1_5_1
      - "'/var/log' not in mount_names"
  tags:
      - level2-server
      - level2-workstation
      - automated
      - audit
      - mounts
      - rule_1.1.5.1
      - skip_ansible_lint

# skips if mount is absent
- name: |
          "1.1.5.2 | PATCH | Ensure nodev option set on /var/log partition"
          "1.1.5.3 | PATCH | Ensure noexec option set on /var/log partition"
          "1.1.5.4 | PATCH | Ensure nosuid option set on /var/log partition"
  mount:
      name: /var/log
      src: "{{ item.device }}"
      fstype: "{{ item.fstype }}"
      state: present
      opts: defaults,{% if rhel8cis_rule_1_1_5_3 %}noexec,{% endif %}{% if rhel8cis_rule_1_1_5_2 %}nodev,{% endif %}{% if rhel8cis_rule_1_1_5_4 %}nosuid{% endif %}
  notify: change_requires_reboot
  with_items:
      - "{{ ansible_mounts }}"
  loop_control:
      label: "{{ item.device }}"
  when:
      - "'/var/log' in mount_names"
      - item.mount == "/var/log"
      - rhel8cis_rule_1_1_5_1  # This is required so the check takes place
      - rhel8cis_rule_1_1_5_2 or
        rhel8cis_rule_1_1_5_3 or
        rhel8cis_rule_1_1_5_4
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - mounts
      - skip_ansible_lint
      - rule_1.1.5.2
      - rule_1.1.5.3
      - rule_1.1.5.4

---

- name: "1.1.6.1 | AUDIT | Ensure separate partition exists for /var/log/audit"
  block:
      - name: "1.1.6.1 | AUDIT | Ensure separate partition exists for /var/log/audit | Warn if partition is absent"
        debug:
            msg: "Warning!! {{ required_mount }} doesn't exist. This is a manual task"
        register: var_log_audit_mount_absent
        changed_when: var_log_audit_mount_absent.skipped is undefined

      - name: "1.1.6.1 | AUDIT | Ensure separate partition exists for /var/log/audit | Present"
        ansible.builtin.import_tasks: warning_facts.yml

  vars:
      warn_control_id: '1.1.6.1'
      required_mount: '/var/log/audit'
  when:
      - rhel8cis_rule_1_1_6_1
      - "'/var/log/audit' not in mount_names"
  tags:
      - level2-server
      - level2-workstation
      - automated
      - audit
      - mounts
      - rule_1.1.6.1

# skips if mount is absent
- name: |
          "1.1.6.2 | PATCH | Ensure noexec option set on /var/log/audit partition"
          "1.1.6.3 | PATCH | Ensure nodev option set on /var/log/audit partition"
          "1.1.6.4 | PATCH | Ensure nosuid option set on /var/log/audit partition"
  mount:
      name: /var/log/audit
      src: "{{ item.device }}"
      fstype: "{{ item.fstype }}"
      state: present
      opts: defaults,{% if rhel8cis_rule_1_1_6_2 %}noexec,{% endif %}{% if rhel8cis_rule_1_1_6_3 %}nodev,{% endif %}{% if rhel8cis_rule_1_1_6_4 %}nosuid{% endif %}
  notify: change_requires_reboot
  with_items:
      - "{{ ansible_mounts }}"
  loop_control:
      label: "{{ item.device }}"
  when:
      - "'/var/log/audit' in mount_names"
      - item.mount == "/var/log/audit"
      - rhel8cis_rule_1_1_6_1  # This is required so the check takes place
      - rhel8cis_rule_1_1_6_2 or
        rhel8cis_rule_1_1_6_3 or
        rhel8cis_rule_1_1_6_4
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - mounts
      - skip_ansible_lint
      - rule_1.1.6.2
      - rule_1.1.6.3
      - rule_1.1.6.4

---

- name: "1.1.7.1 | AUDIT | Ensure separate partition exists for /home"
  block:
      - name: "1.1.7.1 | AUDIT | Ensure separate partition exists for /home | Warn if partition is absent"
        debug:
            msg: "Warning!! {{ required_mount }} doesn't exist. This is a manual task"
        register: home_mount_absent
        changed_when: home_mount_absent.skipped is undefined

      - name: "1.1.7.1 | AUDIT | Ensure separate partition exists for /home | Present"
        ansible.builtin.import_tasks: warning_facts.yml

  vars:
      warn_control_id: '1.1.7.1'
      required_mount: '/home'
  when:
      - rhel8cis_rule_1_1_7_1
      - "'/home' not in mount_names"
  tags:
      - level2-server
      - level2-workstation
      - automated
      - audit
      - mounts
      - rule_1.1.7.1
      - skip_ansible_lint

# skips if mount is absent
- name: |
    "1.1.7.2 | PATCH | Ensure nodev option set on /home partition
     1.1.7.3 | PATCH | Ensure nosuid option set on /home partition
     1.1.7.4 | PATCH | Ensure usrquota option set on /home partition
     1.1.7.5 | PATCH | Ensure grpquota option set on /home partition"
  mount:
      name: /home
      src: "{{ item.device }}"
      fstype: "{{ item.fstype }}"
      state: present
      opts: defaults,{% if rhel8cis_rule_1_1_7_2 %}nodev,{% endif %}{% if rhel8cis_rule_1_1_7_3 %}nosuid,{% endif %}{% if rhel8cis_rule_1_1_7_4 %}usrquota,{% endif %}{% if rhel8cis_rule_1_1_7_5 %}grpquota{% endif %}
  notify: change_requires_reboot
  with_items:
      - "{{ ansible_mounts }}"
  loop_control:
      label: "{{ item.device }}"
  when:
      - "'/home' in mount_names"
      - item.mount == "/home"
      - rhel8cis_rule_1_1_7_1
      - rhel8cis_rule_1_1_7_2 or
        rhel8cis_rule_1_1_7_3 or
        rhel8cis_rule_1_1_7_4 or
        rhel8cis_rule_1_1_7_5
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - mounts
      - rule_1.1.7.2
      - rule_1.1.7.3
      - rule_1.1.7.4
      - skip_ansible_lint

---

# Skips if mount is absent
- name: |
         "1.1.8.1 | PATCH | Ensure nodev option set on /dev/shm partition
          1.1.8.2 | PATCH | Ensure nosuid option set on /dev/shm partition
          1.1.8.3 | PATCH | Ensure noexec option set on /dev/shm partition"
  block:
      - name: |
         "1.1.8.1 | AUDIT | Ensure nodev option set on /dev/shm partition | Check for /dev/shm existence
          1.1.8.2 | AUDIT | Ensure nosuid option set on /dev/shm partition | Check for /dev/shm existence
          1.1.8.3 | AUDIT | Ensure noexec option set on /dev/shm partition | Check for /dev/shm existence"
        shell: mount -l | grep -E '\s/dev/shm\s'
        changed_when: false
        failed_when: false
        check_mode: false
        register: rhel8cis_1_1_8_x_dev_shm_status

      - name: |
              "1.1.8.1 | PATCH | Ensure nodev option set on /dev/shm partition | Set nodev option
               1.1.8.2 | PATCH | Ensure noexec option set on /dev/shm partition | Set nosuid option
               1.1.8.3 | PATCH | Ensure nosuid option set on /dev/shm partition | Set noexec option"
        mount:
            name: /dev/shm
            src: tmpfs
            fstype: tmpfs
            state: mounted
            opts: defaults,{% if rhel8cis_rule_1_1_8_2 %}noexec,{% endif %}{% if rhel8cis_rule_1_1_8_1 %}nodev,{% endif %}{% if rhel8cis_rule_1_1_8_3 %}nosuid{% endif %}
        when: "'dev/shm' in rhel8cis_1_1_8_x_dev_shm_status.stdout"
        notify: change_requires_reboot
  when:
      - rhel8cis_rule_1_1_8_1 or
        rhel8cis_rule_1_1_8_2 or
        rhel8cis_rule_1_1_8_3
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - mounts
      - rule_1.1.8.1
      - rule_1.1.8.2
      - rule_1.1.8.3

---

- name: "1.1.9 | PATCH | Disable Automounting"
  service:
      name: autofs
      enabled: false
  when:
      - not rhel8cis_allow_autofs
      - "'autofs' in ansible_facts.packages"
      - rhel8cis_rule_1_1_9
  tags:
      - level1-server
      - level2-workstation
      - automated
      - patch
      - mounts
      - automounting
      - rule_1.1.9

- name: "1.1.10 | PATCH | Disable USB Storage"
  block:
      - name: "1.1.10 | PATCH | Disable USB Storage | Edit modprobe config"
        lineinfile:
            path: /etc/modprobe.d/CIS.conf
            regexp: "^(#)?install usb-storage(\\s|$)"
            line: "install usb-storage /bin/true"
            create: true
            owner: root
            group: root
            mode: 0600

      - name: "1.1.10 | PATCH | Disable USB Storage | | blacklist"
        lineinfile:
            path: /etc/modprobe.d/blacklist.conf
            regexp: "^(#)?blacklist usb-storage(\\s|$)"
            line: "blacklist usb-storage"
            create: true
            mode: 0600

      - name: "1.1.10 | PATCH | Disable USB Storage | Edit modprobe config"
        modprobe:
            name: usb-storage
            state: absent
  when:
      - rhel8cis_rule_1_1_10
  tags:
      - level1-server
      - level2-workstation
      - automated
      - patch
      - mounts
      - removable_storage
      - rule_1.1.10

---

- name: "1.2.1 | PATCH | Ensure Red Hat Subscription Manager connection is configured"
  redhat_subscription:
      state: present
      username: "{{ rhel8cis_rh_sub_user }}"
      password: "{{ rhel8cis_rh_sub_password }}"
      auto_attach: true
  no_log: true
  when:
      - ansible_distribution == "RedHat"
      - rhel8cis_rhnsd_required
      - rhel8cis_rule_1_2_1
  tags:
      - level1-server
      - level1-workstation
      - manual
      - patch
      - rule_1.2.1
      - skip_ansible_lint  # Added as no_log still errors on ansible-lint

- name: "1.2.2 | AUDIT | Ensure GPG keys are configured"
  shell: "PKG=`rpm -qf {{ rpm_gpg_key }}` && rpm -q --queryformat \"%{PACKAGER} %{SIGPGP:pgpsig}\\n\" \"${PKG}\" | grep \"^{{ rpm_packager }}.*Key.ID.{{ rpm_key }}\""
  changed_when: false
  when:
      - rhel8cis_rule_1_2_2
      - ansible_distribution == "RedHat" or
        ansible_distribution == "Rocky" or
        ansible_distribution == "AlmaLinux" or
        ansible_distribution == "OracleLinux"
  tags:
      - level1-server
      - level1-workstation
      - manual
      - patch
      - rule_1.2.2

- name: "1.2.3| PATCH | Ensure gpgcheck is globally activated"
  block:
      - name: "1.2.3 | AUDIT | Ensure gpgcheck is globally activated | Find repos"
        find:
            paths: /etc/yum.repos.d
            patterns: "*.repo"
        register: yum_repos
        changed_when: false

      - name: "1.2.3 | PATCH | Ensure gpgcheck is globally activated | Update yum.repos"
        replace:
            name: "{{ item.path }}"
            regexp: "^gpgcheck=0"
            replace: "gpgcheck=1"
        with_items:
            - "{{ yum_repos.files }}"
        loop_control:
            label: "{{ item.path }}"
  when:
      - rhel8cis_rule_1_2_3
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_1.2.3

- name: "1.2.4 | AUDIT | Ensure package manager repositories are configured"
  block:
      - name: "1.2.4 | AUDIT | Ensure package manager repositories are configured | Get repo list"
        command: dnf repolist
        changed_when: false
        failed_when: false
        register: dnf_configured
        check_mode: false

      - name: "1.2.4 | AUDIT | Ensure package manager repositories are configured | Display repo list"
        debug:
            msg:
                - "Warning!! Below are the configured repos. Please review and make sure all align with site policy"
                - "{{ dnf_configured.stdout_lines }}"

      - name: "1.2.4 | AUDIT | Ensure package manager repositories are configured | Warn Count"
        ansible.builtin.import_tasks: warning_facts.yml
  vars:
      warn_control_id: '1.2.4'
  when:
      - rhel8cis_rule_1_2_4
  tags:
      - level1-server
      - level1-workstation
      - manual
      - audit
      - rule_1.2.4
      - skip_ansible_lint

---

- name: "1.3.1 | PATCH | Ensure AIDE is installed"
  block:
      - name: "1.3.1 | PATCH | Ensure AIDE is installed | Install AIDE"
        package:
            name: aide
            state: present

      - name: "1.3.1 | PATCH | Ensure AIDE is installed | Configure AIDE"
        command: /usr/sbin/aide --init -B 'database_out=file:/var/lib/aide/aide.db.gz'
        changed_when: false
        failed_when: false
        async: 45
        poll: 0
        args:
            creates: /var/lib/aide/aide.db.gz
        when: not ansible_check_mode
  when:
      - rhel8cis_config_aide
      - rhel8cis_rule_1_3_1
  tags:
      - level1-server
      - level1-workstation
      - automated
      - aide
      - patch
      - rule_1.3.1

- name: "1.3.2 | PATCH | Ensure filesystem integrity is regularly checked"
  cron:
      name: Run AIDE integrity check
      cron_file: "{{ rhel8cis_aide_cron['cron_file'] }}"
      user: "{{ rhel8cis_aide_cron['cron_user'] }}"
      minute: "{{ rhel8cis_aide_cron['aide_minute'] | default('0') }}"
      hour: "{{ rhel8cis_aide_cron['aide_hour'] | default('5') }}"
      day: "{{ rhel8cis_aide_cron['aide_day'] | default('*') }}"
      month: "{{ rhel8cis_aide_cron['aide_month'] | default('*') }}"
      weekday: "{{ rhel8cis_aide_cron['aide_weekday'] | default('*') }}"
      job: "{{ rhel8cis_aide_cron['aide_job'] }}"
  when:
      - rhel8cis_rule_1_3_2
      - not system_is_ec2
  tags:
      - level1-server
      - level1-workstation
      - automated
      - aide
      - file_integrity
      - patch
      - rule_1.3.2

---

- name: "1.4.1 | PATCH | Ensure bootloader password is set"
  copy:
      dest: /boot/grub2/user.cfg  # noqa template-instead-of-copy
      content: "GRUB2_PASSWORD={{ rhel8cis_bootloader_password_hash }}"
      owner: root
      group: root
      mode: 0600
  notify: rhel8cis_grub2cfg
  when:
      - rhel8cis_set_boot_pass
      - rhel8cis_rule_1_4_1
  tags:
      - level1-server
      - level1-workstation
      - automated
      - grub
      - patch
      - rule_1.4.1

- name: "1.4.2 | PATCH | Ensure permissions on bootloader config are configured"
  block:
      - name: "1.4.2 | PATCH | Ensure permissions on bootloader config are configured"
        file:
            path: "{{ grub_cfg.stat.lnk_source }}"
            owner: root
            group: root
            mode: 0600

      - name: "1.4.2 | PATCH | Ensure permissions on bootloader config are configured | UEFI"
        mount:
            name: /boot/efi
            src: "UUID={{ item.uuid }}"
            fstype: vfat
            state: present
            opts: defaults,umask=0027,fmask=0077,uid=0,gid=0
            passno: '0'
        with_items:
            - "{{ ansible_mounts }}"
        loop_control:
            label: "{{ item.mount }}"
        when:
            - not rhel8cis_legacy_boot
            - item.mount == "/boot/efi"
  when:
      - rhel8cis_rule_1_4_2
      - grub_cfg.stat.exists
      - grub_cfg.stat.islnk
  tags:
      - level1-server
      - level1-workstation
      - automated
      - grub
      - patch
      - rule_1.4.2

- name: "1.4.3 | PATCH | Ensure authentication is required when booting into rescue mode"
  lineinfile:
      path: /etc/systemd/system/rescue.service.d/00-require-auth.conf
      regexp: '^ExecStart='
      line: "ExecStart=-/usr/lib/systemd/systemd-sulogin-shell rescue"
      create: true
      owner: root
      group: root
      mode: 0644
  when:
      - rhel8cis_rule_1_4_3
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_1.4.3

---

- name: "1.5.1 | PATCH | Ensure core dump storage is disabled"
  lineinfile:
      path: /etc/systemd/coredump.conf
      regexp: 'Storage='
      line: 'Storage=none'
  notify: systemd_daemon_reload
  when:
      - rhel8cis_rule_1_5_1
      - systemd_coredump.stat.exists
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_1.5.1

- name: "1.5.2 | PATCH | Ensure core dump backtraces are disabled"
  lineinfile:
      path: /etc/systemd/coredump.conf
      regexp: 'ProcessSizeMax='
      line: 'ProcessSizeMax=0'
  when:
      - rhel8cis_rule_1_5_2
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - sysctl
      - rule_1.5.2

- name: "1.5.3 | PATCH | Ensure address space layout randomization (ASLR) is enabled"
  sysctl:
      name: kernel.randomize_va_space
      value: '2'
      state: present
      reload: true
      sysctl_set: true
      ignoreerrors: true
  when:
      - rhel8cis_rule_1_5_3
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - sysctl
      - rule_1.5.3

---

- name: "1.6.1.1 | PATCH | Ensure SELinux is installed"
  package:
      name: libselinux
      state: present
  when:
      - rhel8cis_rule_1_6_1_1
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_1.6.1.1

- name: "1.6.1.2 | PATCH | Ensure SELinux is not disabled in bootloader configuration"
  replace:
      path: /etc/default/grub
      regexp: '(selinux|enforcing)\s*=\s*0\s*'
      replace: ''
  register: selinux_grub_patch
  ignore_errors: true  # noqa ignore-errors
  notify: rhel8cis_grub2cfg
  when:
      - rhel8cis_rule_1_6_1_2
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_1.6.1.2

# State set to enforcing because control 1.6.1.5 requires enforcing to be set
- name: "1.6.1.3 | PATCH | Ensure SELinux policy is configured"
  selinux:
      conf: /etc/selinux/config
      policy: "{{ rhel8cis_selinux_pol }}"
      state: enforcing
  when:
      - not rhel8cis_selinux_disable
      - rhel8cis_rule_1_6_1_3
  tags:
      - level1-server
      - level1-workstation
      - automated
      - selinux
      - patch
      - rule_1.6.1.3

# State set to enforcing because control 1.6.1.5 requires enforcing to be set
- name: "1.6.1.4 | PATCH | Ensure the SELinux mode is not disabled"
  selinux:
      conf: /etc/selinux/config
      policy: "{{ rhel8cis_selinux_pol }}"
      state: enforcing
  when:
      - not rhel8cis_selinux_disable
      - rhel8cis_rule_1_6_1_4
  tags:
      - level1-server
      - level1-workstation
      - auotmated
      - selinux
      - patch
      - rule_1.6.1.4

- name: "1.6.1.5 | PATCH | Ensure the SELinux state is enforcing"
  selinux:
      conf: /etc/selinux/config
      policy: "{{ rhel8cis_selinux_pol }}"
      state: enforcing
  when:
      - not rhel8cis_selinux_disable
      - rhel8cis_rule_1_6_1_5
  tags:
      - level2-server
      - level2-workstation
      - automated
      - selinux
      - patch
      - rule_1.6.1.5

- name: "1.6.1.6 | AUDIT | Ensure no unconfined services exist"
  block:
      - name: "1.6.1.6 | AUDIT | Ensure no unconfined services exist | Find the unconfined services"
        shell: ps -eZ | grep unconfined_service_t | egrep -vw "tr|ps|egrep|bash|awk" | tr ':' ' ' | awk '{ print $NF }'
        register: rhelcis_1_6_1_6_unconf_services
        failed_when: false
        changed_when: false

      - name: "1.6.1.6 | AUDIT | Ensure no unconfined services exist | Message on unconfined services"
        debug:
            msg: "Warning!! You have unconfined services: {{ rhelcis_1_6_1_6_unconf_services.stdout_lines }}"
        when: rhelcis_1_6_1_6_unconf_services.stdout | length > 0

      - name: "1.6.1.6 | AUDIT | Ensure no unconfined services exist | warning count"
        ansible.builtin.import_tasks: warning_facts.yml
        when: rhelcis_1_6_1_6_unconf_services.stdout | length > 0
  vars:
      warn_control_id: '1.6.1.6'
  when:
      - rhel8cis_rule_1_6_1_6
  tags:
      - level1-server
      - level1-workstation
      - automated
      - audit
      - services
      - rule_1.6.1.6

- name: "1.6.1.7 | PATCH | Ensure SETroubleshoot is not installed"
  package:
      name: setroubleshoot
      state: absent
  when:
      - rhel8cis_rule_1_6_1_7
      - "'setroubleshoot' in ansible_facts.packages"
  tags:
      - level1-server
      - automated
      - selinux
      - patch
      - rule_1.6.1.7

- name: "1.6.1.8 | PATCH | Ensure the MCS Translation Service (mcstrans) is not installed"
  package:
      name: mcstrans
      state: absent
  when:
      - rhel8cis_rule_1_6_1_8
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_1.6.1.8

---

- name: "1.7.1 | PATCH | Ensure message of the day is configured properly"
  template:
      src: etc/motd.j2
      dest: /etc/motd
      owner: root
      group: root
      mode: 0644
  when:
      - rhel8cis_rule_1_7_1
  tags:
      - level1-server
      - level1-workstation
      - automated
      - banner
      - patch
      - rule_1.7.1

- name: "1.7.2 | PATCH | Ensure local login warning banner is configured properly"
  template:
      src: etc/issue.j2
      dest: /etc/issue
      owner: root
      group: root
      mode: 0644
  when:
      - rhel8cis_rule_1_7_2
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_1.7.2

- name: "1.7.3 | PATCH | Ensure remote login warning banner is configured properly"
  template:
      src: etc/issue.net.j2
      dest: /etc/issue.net
      owner: root
      group: root
      mode: 0644
  when:
      - rhel8cis_rule_1_7_3
  tags:
      - level1-server
      - level1-workstation
      - automated
      - banner
      - patch
      - rule_1.7.3

- name: "1.7.4 | PATCH | Ensure permissions on /etc/motd are configured"
  file:
      path: /etc/motd
      state: file
      owner: root
      group: root
      mode: 0644
  when:
      - rhel8cis_rule_1_7_4
  tags:
      - level1-server
      - level1-workstation
      - automated
      - perms
      - patch
      - rule_1.7.4

- name: "1.7.5 | PATCH | Ensure permissions on /etc/issue are configured"
  file:
      path: /etc/issue
      state: file
      owner: root
      group: root
      mode: 0644
  when:
      - rhel8cis_rule_1_7_5
  tags:
      - level1-server
      - level1-workstation
      - automated
      - perms
      - patch
      - rule_1.7.5

- name: "1.7.6 | PATCH | Ensure permissions on /etc/issue.net are configured"
  file:
      path: /etc/issue.net
      state: file
      owner: root
      group: root
      mode: 0644
  when:
      - rhel8cis_rule_1_7_6
  tags:
      - level1-server
      - level1-workstation
      - automated
      - perms
      - patch
      - rule_1.7.6

---

- name: "1.8.1 | PATCH | Ensure GNOME Display Manager is removed"
  package:
      name: gdm
      state: absent
  when:
      - rhel8cis_rule_1_8_1
      - "'gdm' in ansible_facts.packages"
      - not rhel8cis_gui
  tags:
      - level2-server
      - automated
      - patch
      - gui
      - gdm
      - rule_1.8.1

- name: "1.8.2 | PATCH | Ensure GDM login banner is configured"
  lineinfile:
      path: "{{ item.file }}"
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      create: true
      owner: root
      group: root
      mode: 0644
  notify: reload dconf
  with_items:
      - { file: '/etc/dconf/profile/gdm', regexp: 'user-db', line: 'user-db:user' }
      - { file: '/etc/dconf/profile/gdm', regexp: 'system-db', line: 'system-db:gdm' }
      - { file: '/etc/dconf/profile/gdm', regexp: 'file-db', line: 'file-db:/usr/share/gdm/greeter-dconf-defaults' }
      - { file: '/etc/dconf/db/gdm.d/01-banner-message', regexp: '\[org\/gnome\/login-screen\]', line: '[org/gnome/login-screen]' }
      - { file: '/etc/dconf/db/gdm.d/01-banner-message', regexp: 'banner-message-enable', line: 'banner-message-enable=true' }
      - { file: '/etc/dconf/db/gdm.d/01-banner-message', regexp: 'banner-message-text', line: "banner-message-text='{{ rhel8cis_warning_banner | replace('\n', ' ') }}' " }
  when:
      - rhel8cis_rule_1_8_2
      - rhel8cis_gui
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - gui
      - gdm
      - rule_1.8.2

- name: "1.8.3 | PATCH | Ensure last logged in user display is disabled"
  lineinfile:
      path: "{{ item.file }}"
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      create: true
      owner: root
      group: root
      mode: 0644
  notify: reload dconf
  with_items:
      - { file: '/etc/dconf/profile/gdm', regexp: 'user-db', line: 'user-db:user' }
      - { file: '/etc/dconf/profile/gdm', regexp: 'system-db', line: 'system-db:gdm' }
      - { file: '/etc/dconf/profile/gdm', regexp: 'file-db', line: 'file-db:/usr/share/gdm/greeter-dconf-defaults'}
      - { file: '/etc/dconf/db/gdm.d/00-login-screen', regexp: '\[org\/gnome\/login-screen\]', line: '[org/gnome/login-screen]' }
      - { file: '/etc/dconf/db/gdm.d/00-login-screen', regexp: 'disable-user-list=', line: 'disable-user-list=true' }
  when:
      - rhel8cis_rule_1_8_3
      - rhel8cis_gui
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - gui
      - rule_1.8.3

- name: "1.8.4 | PATCH | Ensure XDMCP is not enabled"
  lineinfile:
      path: /etc/gdm/custom.conf
      regexp: 'Enable=true'
      state: absent
  when:
      - rhel8cis_rule_1_8_4
      - rhel8cis_gui
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - gui
      - rule_1.8.4

- name: "1.8.5 | PATCH | Ensure automatic mounting of removable media is disabled"
  lineinfile:
      path: /etc/dconf/db/local.d/00-media-automount
      regexp: "{{ item.regex }}"
      line: "{{ item.line }}"
      create: true
      owner: root
      group: root
      mode: 0640
  notify: reload dconf
  with_items:
      - { regex: '\[org\/gnome\/desktop\/media-handling\]', line: '[org/gnome/desktop/media-handling]' }
      - { regex: 'automount=', line: 'automount=false' }
      - { regex: 'automount-open=', line: 'automount-open=false'}
  when:
      - rhel8cis_rule_1_8_5
      - rhel8cis_gui
  tags:
      - level1-server
      - level2-workstation
      - automated
      - patch
      - gui
      - rule_1.8.5

---

- name: "1.9 | PATCH | Ensure updates, patches, and additional security software are installed"
  package:
      name: "*"
      state: latest
  notify: change_requires_reboot
  when:
      - rhel8cis_rule_1_9
      - not system_is_ec2
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_1.9
      - skip_ansible_lint

---

- name: "1.10 | PATCH | Ensure system-wide crypto policy is not legacy"
  shell: |
      update-crypto-policies --set "{{ rhel8cis_crypto_policy }}"
      update-crypto-policies
  notify: change_requires_reboot
  when:
      - rhel8cis_rule_1_10
      - rhel8cis_crypto_policy|string not in system_wide_crypto_policy['stdout']
  tags:
      - level1-server
      - level1-workstation
      - automated
      - no system_is_ec2
      - patch
      - rule_1.10

